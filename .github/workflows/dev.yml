# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'

    - name: Build
      run: go build -o goshell -v ./cmd/goshell/goshell.go

    - name: Scan Go Binary with Grype
      uses: anchore/scan-action@v3
      id: scan
      with:       
        path: "."
        output-format: table
        fail-build: false       
   
    
    - name: Login to GitHub Container Registry (Optional)
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker Image
      run: |
        docker build -t ghcr.io/${{ github.repository }}/goshell-service:${{ github.sha }} .
        docker push ghcr.io/${{ github.repository }}/goshell-service:${{ github.sha }}

    - name: Scan Docker Image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
       image-ref: ghcr.io/${{ github.repository }}/my-app:${{ github.sha }}
       scan-type: image
       format: sarif
       output: /tmp/trivy.sarif

    - name: Read file contents
      run: cat /tmp/trivy.sarif
